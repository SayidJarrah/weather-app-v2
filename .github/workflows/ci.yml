name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew
        working-directory: backend

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Run backend tests
        run: ./gradlew test
        working-directory: backend

  build-and-push:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare image names
        run: |
          owner="${GITHUB_REPOSITORY_OWNER,,}"
          echo "OWNER_LC=$owner" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=$REGISTRY/$owner/weather-backend" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=$REGISTRY/$owner/weather-frontend" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: backend
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }}
            ${{ env.BACKEND_IMAGE }}:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: frontend
          build-args: |
            VITE_BACKEND_URL=${{ secrets.FRONTEND_BACKEND_URL }}
          push: true
          tags: |
            ${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }}
            ${{ env.FRONTEND_IMAGE }}:latest

      - name: Trigger backend deploy on Render
        env:
          DEPLOY_HOOK: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}
        run: |
          if [ -z "$DEPLOY_HOOK" ]; then
            echo "No backend deploy hook configured; skipping.";
          else
            curl -fsSL -X POST "$DEPLOY_HOOK";
          fi

      - name: Trigger frontend deploy on Render
        env:
          DEPLOY_HOOK: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}
        run: |
          if [ -z "$DEPLOY_HOOK" ]; then
            echo "No frontend deploy hook configured; skipping.";
          else
            curl -fsSL -X POST "$DEPLOY_HOOK";
          fi
